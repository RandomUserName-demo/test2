name: test

on:
  issue_comment:
    types: [created, edited]
jobs:
  check-permission:
    if: github.event.issue.pull_request && startsWith(github.event.comment.body, '/runtime-upgrade-test')
    runs-on: ubuntu-latest
    steps:
    - name: Check permission
      uses: actions/github-script@v7
      with:
        result-encoding: string
        script: |
          const response = await github.rest.repos.getCollaboratorPermissionLevel({
            owner: context.repo.owner,
            repo: context.repo.repo,
            username: context.actor
          });

          const actorPermissionLevel = response.data.permission;
          console.log(actorPermissionLevel);

          // <- lower higher ->
          // ["none", "read", "write", "admin"]
          if (!(actorPermissionLevel == "admin" || actorPermissionLevel == "write")) {
            core.setFailed("Permission denied.");
          }

  runtime-upgrade-test:
    # run only when PR comments start with '/runtime-upgrade-test'.
    if: github.event.issue.pull_request && startsWith(github.event.comment.body, '/runtime-upgrade-test')
    needs: check-permission
    runs-on: ubuntu-latest
    steps:
    - name: Validate and set inputs
      id: test-input
      uses: actions/github-script@v7
      with:
        result-encoding: string
        script: |
          const command = `${{ github.event.comment.body }}`.split(" ");
          console.log(command);

          // command should be '/runtime-upgrade-test runtime'
          if (command.length != 2) {
            core.setFailed("Invalid input. It should be '/runtime-upgrade-test [runtime]'");
          }

          const runtime = command[1];
          if (!['shibuya', 'shiden', 'astar'].includes(runtime)) {
            const err = "Invalid runtime. It should be 'shibuya', 'shiden', or 'astar'.";
            // Error message in Actions.
            core.setFailed(err);
            // PR comment.
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: err
            });
          }

          core.setOutput("runtime", runtime);

